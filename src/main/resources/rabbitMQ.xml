<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">

	<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter" />  

	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory" username="${rabbitmq.username}" password="${rabbitmq.password}"  host="${rabbitmq.host}" port="${rabbitmq.port}" />

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate"  connection-factory="connectionFactory" 
	    exchange="logexchange" />
		
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!--定义queue 
	durable:是否持久化
	exclusive:是否仅创建者使用
	auto_delete:所有消费者断开连接后，是否自动删除队列 
	 -->
	<rabbit:queue name="logQueue" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue name="test1001" durable="true" auto-delete="false" exclusive="false" />

	<!-- exchange 消息路由策略，主要分为direct、fanout、topic、headers,可以绑定多个消息队列
	1、direct Exchange通过完全匹配binding key与routing key发送到对应的Queue
	2、fanout Exchange转发消息到所有绑定的Queue
	3、headers Exchange根据发送的消息内容中的headers属性进行匹配
	4、topic  与direct类似，区别在于topic是模糊匹配:
	   （1）routing key为“.”分隔的字符串，如“lsip.person”
	   （2）binding key与routing key一样也是句点号“. ”分隔的字符串
	   （3）binding key中可以存在两种特殊字符“*”与“#”，用于做模糊匹配，其中“*”用于匹配一个单词，“#”用于匹配多个单词（可以是零个）
	 -->
	<rabbit:direct-exchange name="logexchange" durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="logQueue" key="logQueuekey"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	
	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.wzsuper.jersey.services.LogMessageConsumer"></bean>
	
	<!-- 配置监听 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory">
             <rabbit:listener queues="logQueue"  ref="messageReceiver"/>
    </rabbit:listener-container>
   
	
</beans>